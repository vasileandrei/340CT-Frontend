{"ast":null,"code":"import _defineProperty from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Button, FormGroup, FormControl } from 'react-bootstrap';\nimport { SyncLoader } from 'react-spinners';\nimport { CSSTransition } from 'react-transition-group';\nimport axiosReq from './../../actions/axiosRequests';\nimport PropTypes from 'prop-types';\nimport user from './images/user.png';\nimport lock from './images/lock.png';\nimport './Login.css';\nimport 'react-toastify/dist/ReactToastify.css';\nvar zero = 0;\nvar minLength = 5; // This is a class that handles the login to the website, using a username and a password\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  // constctor for the class\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      username: '',\n      password: '',\n      message: '',\n      appearLogin: true,\n      show: true,\n      showClass: '',\n      loading: false\n    };\n\n    _this.showFlashMessage = function (event) {\n      return _this._showFlashMessage(event);\n    };\n\n    return _this;\n  } // eslint-disable-next-line no-unused-vars\n\n\n  _createClass(Login, [{\n    key: \"_showFlashMessage\",\n    value: function _showFlashMessage(event) {\n      this.setState({\n        show: !this.state.show,\n        showClass: !this.state.show ? 'fadeOut' : 'fadeOut2'\n      });\n    } // form check - check for empty username or password\n\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      if (this.state.username.length > zero && this.state.password.length > zero) {\n        return true;\n      }\n    } // handle changes in the two fields\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.id, event.target.value));\n    } // handle submiting the form\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n\n      if (this.state.username.length < minLength || this.state.password.length < minLength) {\n        this.setState({\n          message: 'Username and password must be valid'\n        });\n      } else {\n        this.setState({\n          loading: true\n        });\n        this.login();\n      }\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      var messageIndex = 0;\n      var redirectIndex = 1;\n      var username = this.state.username;\n      var password = this.state.password;\n      var response = axiosReq('login', username, password);\n      this.setState({\n        message: response[messageIndex],\n        loading: false\n      });\n\n      if (response[redirectIndex] === true) {\n        window.location.replace('/shareFile');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(CSSTransition, {\n        in: this.state.appearLogin,\n        appear: true,\n        timeout: 300,\n        classNames: \"fade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"login-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"field\",\n        controlId: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: user,\n        alt: \"login user icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        autoFocus: true,\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"field\",\n        controlId: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: lock,\n        alt: \"login lock icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        required: true,\n        className: \"input\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(SyncLoader, {\n        sizeUnit: 'px',\n        size: 10,\n        color: 'rgba(113, 137, 255, 0.9)',\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.state.showClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        className: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        name: \"submit\",\n        disabled: !this.validateForm,\n        onClick: this.showFlashMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Button, {\n        onClick: this.props.registerRender,\n        value: \"Register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Register\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Lost password?\"))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {\n  registerRender: PropTypes.func.isRequired\n};\nexport default Login;","map":{"version":3,"sources":["D:\\University\\Frontend-340CT\\frontend340ct\\src\\components\\Login\\Login.js"],"names":["React","Component","Button","FormGroup","FormControl","SyncLoader","CSSTransition","axiosReq","PropTypes","user","lock","zero","minLength","Login","props","state","username","password","message","appearLogin","show","showClass","loading","showFlashMessage","event","_showFlashMessage","setState","length","target","id","value","preventDefault","login","messageIndex","redirectIndex","response","window","location","replace","handleSubmit","handleChange","validateForm","registerRender","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, FormGroup, FormControl } from 'react-bootstrap';\r\nimport { SyncLoader } from 'react-spinners';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport axiosReq from './../../actions/axiosRequests';\r\nimport PropTypes from 'prop-types';\r\nimport user from './images/user.png';\r\nimport lock from './images/lock.png';\r\nimport './Login.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst zero = 0;\r\nconst minLength = 5;\r\n\r\n// This is a class that handles the login to the website, using a username and a password\r\nclass Login extends Component {\r\n\r\n    // constctor for the class\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            message: '',\r\n            appearLogin: true,\r\n            show: true,\r\n            showClass: '',\r\n            loading: false\r\n        };\r\n\r\n        this.showFlashMessage = (event) => this._showFlashMessage(event);\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    _showFlashMessage(event) {\r\n        this.setState({\r\n            show: !this.state.show,\r\n            showClass: (!this.state.show ? 'fadeOut': 'fadeOut2')\r\n        });\r\n    }\r\n\r\n    // form check - check for empty username or password\r\n    validateForm() {\r\n        if (this.state.username.length > zero && this.state.password.length > zero) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // handle changes in the two fields\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    // handle submiting the form\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.state.username.length < minLength || this.state.password.length < minLength) {\r\n            this.setState({\r\n                message: 'Username and password must be valid'\r\n            });\r\n        } else {\r\n            this.setState({\r\n                loading: true\r\n            });\r\n            this.login();\r\n        }\r\n    }\r\n\r\n    login() {\r\n        const messageIndex = 0;\r\n        const redirectIndex = 1;\r\n\r\n        const username = this.state.username;\r\n        const password = this.state.password;\r\n        const response = axiosReq('login', username, password);\r\n        this.setState({\r\n            message: response[messageIndex],\r\n            loading: false\r\n        });\r\n        if (response[redirectIndex] === true) {\r\n            window.location.replace('/shareFile');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <CSSTransition\r\n                    in={this.state.appearLogin}\r\n                    appear={true}\r\n                    timeout={300}\r\n                    classNames=\"fade\"\r\n                    >\r\n                    <form className=\"login-form\" onSubmit={this.handleSubmit}>\r\n                        <FormGroup className=\"field\" controlId=\"username\">\r\n                            <img src={user} alt=\"login user icon\"></img>\r\n                            <FormControl autoFocus className=\"input\" type=\"text\"\r\n                            placeholder=\"Username\" value={this.state.username} onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"field\" controlId=\"password\">\r\n                            <img src={lock} alt=\"login lock icon\"></img>\r\n                            <FormControl required className=\"input\" type=\"password\"\r\n                            placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                        <br />\r\n                        <SyncLoader\r\n                            sizeUnit={'px'}\r\n                            size={10}\r\n                            color={'rgba(113, 137, 255, 0.9)'}\r\n                            loading={this.state.loading}\r\n                        />\r\n                        <br />\r\n                        <div className={this.state.showClass}>\r\n                            {this.state.message}\r\n                        </div>\r\n                        <br />\r\n                        <FormGroup className=\"submit\">\r\n                            <Button type=\"submit\" name=\"submit\" disabled={!this.validateForm}\r\n                            onClick={this.showFlashMessage}>Login</Button>\r\n                            <Button onClick={this.props.registerRender} value=\"Register\" >Register</Button>\r\n                        </FormGroup>\r\n                        <br />\r\n                        <a href=\"/\">Lost password?</a>\r\n                    </form>\r\n                </CSSTransition>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    registerRender: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}