{"ast":null,"code":"import _classCallCheck from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\src\\\\components\\\\FileShare\\\\FileShare.js\";\nimport React, { Component } from 'react';\nimport { SyncLoader } from 'react-spinners';\nimport { connect } from 'react-redux';\nimport { logout } from './../../actions/authActions';\nimport { store } from './../../index';\nimport { setCurrentUser } from './../../actions/authActions';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport deleteFile from './../../actions/axiosFileDel';\nimport downloadReq from './../../actions/axiosFileReq';\nimport setAuthorizationToken from './../../utils/setAuthorizationToken';\nimport './FileShare.css';\nvar currentFile;\n\nvar FileShare =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileShare, _Component);\n\n  function FileShare(props) {\n    var _this;\n\n    _classCallCheck(this, FileShare);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileShare).call(this, props));\n\n    _this._showFlashMessage = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        show: !_this.state.show,\n        showClass: !_this.state.show ? 'fadeOut' : 'fadeOut2'\n      });\n    };\n\n    var textBoxInput;\n    var expireDate;\n    currentFile = _this.props.auth.user.userInfo.files.find(function (o) {\n      return o._id === props.match.params.id;\n    });\n\n    if (currentFile) {\n      var expired = _this.checkExpire(currentFile.expires);\n\n      if (expired) {\n        textBoxInput = 'File expired';\n      } else {\n        textBoxInput = currentFile.url;\n        expireDate = _this.displayText(currentFile.expires);\n      }\n    }\n\n    _this.state = {\n      boxText: textBoxInput,\n      copied: false,\n      appearLogin: true,\n      loading: false,\n      message: '',\n      targetDate: expireDate\n    };\n\n    _this.showFlashMessage = function (event) {\n      return _this._showFlashMessage(event);\n    };\n\n    return _this;\n  }\n\n  _createClass(FileShare, [{\n    key: \"onCopy\",\n    value: function onCopy() {\n      this.setState({\n        copied: true\n      });\n    }\n  }, {\n    key: \"notify\",\n    value: function notify() {\n      toast('Successfully copied to clipboard', {\n        className: 'toast'\n      });\n    }\n  }, {\n    key: \"restore\",\n    value: function restore(user, token) {\n      localStorage.setItem('jwtToken', token);\n      setAuthorizationToken(user);\n      store.dispatch(setCurrentUser(user));\n    }\n  }, {\n    key: \"checkExpire\",\n    value: function checkExpire(expires) {\n      var currentTime = Date.now();\n\n      if (currentTime > expires) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"displayText\",\n    value: function displayText(expires) {\n      var date = new Date(expires);\n      return date.toUTCString();\n    }\n  }, {\n    key: \"handleDownload\",\n    value: function handleDownload(event) {\n      event.preventDefault();\n      this.showFlashMessage(event);\n      this.setState({\n        message: 'Initiate download',\n        loading: true\n      });\n      this.download();\n    }\n  }, {\n    key: \"download\",\n    value: function download() {\n      var expired = this.checkExpire(currentFile.expires);\n\n      if (expired) {\n        this.setState({\n          message: 'File expired. It can no longer be downloaded.',\n          loading: false,\n          boxText: 'File expired'\n        });\n      } else {\n        // Soft delete file\n        deleteFile('soft_delete', currentFile._id);\n        var user = this.props.auth.user;\n        var token = localStorage.getItem('jwtToken'); // Clear current redux store\n\n        this.props.logout(); // Initiate download\n\n        var message = downloadReq('download', currentFile.url);\n\n        if (!message) {\n          message = 'Failed to download';\n        }\n\n        this.setState({\n          loading: false,\n          message: message\n        }); // Set Redux store back\n\n        this.restore(user, token);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var expireText = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"File expires on \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, this.state.targetDate));\n      return React.createElement(CSSTransition, {\n        in: this.state.appearLogin,\n        appear: true,\n        timeout: 300,\n        classNames: \"fade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        autoClose: 2500,\n        pauseOnHover: false,\n        hideProgressBar: true,\n        className: \"toast\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"homeTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Your file is ready\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), this.state.targetDate ? expireText : '', React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"linkDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"textOnBox\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: this.state.boxText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.state.boxText)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(SyncLoader, {\n        sizeUnit: 'px',\n        size: 10,\n        color: 'rgba(113, 137, 255, 0.9)',\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.state.showClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.state.message)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(CopyToClipboard, {\n        text: this.state.boxText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"actionButton\",\n        onClick: this.notify,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Copy\")), React.createElement(\"button\", {\n        className: \"actionButton\",\n        onClick: this.handleDownload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Download\"))));\n    }\n  }]);\n\n  return FileShare;\n}(Component);\n\nFileShare.propTypes = {\n  logout: PropTypes.func.isRequired,\n  toast: PropTypes.func.isRequired,\n  auth: PropTypes.func.isRequired,\n  match: PropTypes.element.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default connect(mapStateToProps, {\n  logout: logout\n})(FileShare);","map":{"version":3,"sources":["D:\\University\\Frontend-340CT\\frontend340ct\\src\\components\\FileShare\\FileShare.js"],"names":["React","Component","SyncLoader","connect","logout","store","setCurrentUser","ToastContainer","toast","CopyToClipboard","CSSTransition","PropTypes","deleteFile","downloadReq","setAuthorizationToken","currentFile","FileShare","props","_showFlashMessage","event","preventDefault","setState","show","state","showClass","textBoxInput","expireDate","auth","user","userInfo","files","find","o","_id","match","params","id","expired","checkExpire","expires","url","displayText","boxText","copied","appearLogin","loading","message","targetDate","showFlashMessage","className","token","localStorage","setItem","dispatch","currentTime","Date","now","date","toUTCString","download","getItem","restore","expireText","notify","handleDownload","propTypes","func","isRequired","element","mapStateToProps"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { SyncLoader } from 'react-spinners';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../../actions/authActions';\r\nimport { store } from './../../index';\r\nimport { setCurrentUser } from './../../actions/authActions';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport deleteFile from './../../actions/axiosFileDel';\r\nimport downloadReq from './../../actions/axiosFileReq';\r\nimport setAuthorizationToken from './../../utils/setAuthorizationToken';\r\nimport './FileShare.css';\r\n\r\nlet currentFile;\r\n\r\nclass FileShare extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let textBoxInput;\r\n        let expireDate;\r\n\r\n        currentFile = this.props.auth.user.userInfo.files.find(o => o._id === props.match.params.id);\r\n\r\n        if (currentFile){\r\n            const expired = this.checkExpire(currentFile.expires);\r\n            if (expired) {\r\n                textBoxInput = 'File expired';\r\n            } else {\r\n                textBoxInput = currentFile.url;\r\n                expireDate = this.displayText(currentFile.expires);\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            boxText: textBoxInput,\r\n            copied: false,\r\n            appearLogin: true,\r\n            loading: false,\r\n            message: '',\r\n            targetDate: expireDate\r\n        };\r\n\r\n\t\tthis.showFlashMessage = (event) => this._showFlashMessage(event);\r\n    }\r\n\r\n    _showFlashMessage= (event) => {\r\n        event.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\tshow: !this.state.show,\r\n\t\t\tshowClass: (!this.state.show ? 'fadeOut': 'fadeOut2')\r\n\t\t});\r\n\t}\r\n\r\n    onCopy(){\r\n        this.setState({\r\n            copied: true\r\n        });\r\n    }\r\n\r\n    notify() {\r\n        toast('Successfully copied to clipboard', { className: 'toast' });\r\n    }\r\n\r\n    restore(user, token){\r\n        localStorage.setItem('jwtToken', token);\r\n        setAuthorizationToken(user);\r\n        store.dispatch(setCurrentUser(user));\r\n    }\r\n\r\n    checkExpire(expires){\r\n        const currentTime = Date.now();\r\n        if (currentTime > expires) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    displayText(expires){\r\n        const date = new Date(expires);\r\n        return date.toUTCString();\r\n    }\r\n\r\n    handleDownload(event ) {\r\n        event.preventDefault();\r\n        this.showFlashMessage(event);\r\n        this.setState({\r\n            message: 'Initiate download',\r\n            loading: true\r\n        });\r\n        this.download();\r\n    }\r\n\r\n    download() {\r\n\r\n        const expired = this.checkExpire(currentFile.expires);\r\n        if (expired) {\r\n            this.setState({\r\n                message: 'File expired. It can no longer be downloaded.',\r\n                loading: false,\r\n                boxText: 'File expired'\r\n            });\r\n        } else {\r\n            // Soft delete file\r\n            deleteFile('soft_delete', currentFile._id);\r\n\r\n            const user = this.props.auth.user;\r\n            const token = localStorage.getItem('jwtToken');\r\n            // Clear current redux store\r\n            this.props.logout();\r\n            // Initiate download\r\n            let message = downloadReq('download', currentFile.url);\r\n            if (!message) {\r\n                message = 'Failed to download';\r\n            }\r\n            this.setState({\r\n                loading: false,\r\n                message\r\n            });\r\n            // Set Redux store back\r\n            this.restore(user, token);\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const expireText = <p>File expires on <b>{this.state.targetDate}</b></p>;\r\n        return (\r\n            <CSSTransition\r\n            in={this.state.appearLogin}\r\n            appear={true}\r\n            timeout={300}\r\n            classNames=\"fade\"\r\n            >\r\n                <div className='body'>\r\n                <ToastContainer\r\n                    autoClose={2500}\r\n                    pauseOnHover={false}\r\n                    hideProgressBar={true}\r\n                    className='toast'\r\n                />\r\n                    <div className='content'>\r\n                        <h1 className='homeTitle'>Your file is ready</h1>\r\n                        <br /> <br />\r\n                        { this.state.targetDate? expireText : ''}\r\n                        <br />\r\n                        <p className='linkDisplay'>\r\n                            <a className='textOnBox' target=\"_blank\" rel=\"noopener noreferrer\"\r\n                            href={this.state.boxText}>\r\n                                {this.state.boxText}\r\n                            </a>\r\n                         </p>\r\n                        <br />\r\n                        <div className='display'>\r\n                            <SyncLoader\r\n                                sizeUnit={'px'}\r\n                                size={10}\r\n                                color={'rgba(113, 137, 255, 0.9)'}\r\n                                loading={this.state.loading}\r\n                            />\r\n                            <br />\r\n                            <div className={this.state.showClass}>\r\n                                {this.state.message}\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <CopyToClipboard text={this.state.boxText}>\r\n                            <button className='actionButton' onClick={this.notify}>Copy</button>\r\n                        </CopyToClipboard>\r\n                        <button className='actionButton' onClick={this.handleDownload}>Download</button>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n}\r\n\r\nFileShare.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    toast: PropTypes.func.isRequired,\r\n    auth: PropTypes.func.isRequired,\r\n    match: PropTypes.element.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(FileShare);\r\n"]},"metadata":{},"sourceType":"module"}