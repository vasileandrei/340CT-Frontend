{"ast":null,"code":"import axios from 'axios';\nimport setAuthorizationHeader from './../utils/setAuthorizationToken'; // const headers = {\n//     headers: {\n//         'Access-Control-Allow-Origin': '*'\n//     }\n// };\n\nexport default function (token) {\n  return new Promise(function (resolve, reject) {\n    var message;\n    var redirect;\n    var api_uri = 'http://localhost:8081/api/v1/users/tokenUpdate';\n    axios.post(api_uri, {\n      token: token,\n      // headers,\n      json: true\n    }).then(function (res) {\n      var respJS = JSON.parse(res.data.content.text);\n\n      if (respJS.hasBeenSuccessful === true) {\n        message = respJS.content.message;\n        redirect = true;\n        var _token = respJS.content.token;\n        localStorage.setItem('jwtToken', _token);\n        setAuthorizationHeader(_token);\n      }\n\n      resolve([message, redirect]);\n    }).catch(function (error) {\n      return reject(error.message);\n    });\n  });\n}","map":{"version":3,"sources":["D:\\University\\Frontend-340CT\\frontend340ct\\src\\utils\\markAsDeleted.js"],"names":["axios","setAuthorizationHeader","token","Promise","resolve","reject","message","redirect","api_uri","post","json","then","res","respJS","JSON","parse","data","content","text","hasBeenSuccessful","localStorage","setItem","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP,MAAmC,kCAAnC,C,CAGA;AACA;AACA;AACA;AACA;;AAEA,eAAe,UAASC,KAAT,EAAgB;AAC3B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAIC,OAAJ;AACA,QAAIC,QAAJ;AACA,QAAMC,OAAO,GAAG,gDAAhB;AACAR,IAAAA,KAAK,CAACS,IAAN,CAAWD,OAAX,EAAoB;AAChBN,MAAAA,KAAK,EAALA,KADgB;AAEhB;AACAQ,MAAAA,IAAI,EAAE;AAHU,KAApB,EAKCC,IALD,CAKM,UAAAC,GAAG,EAAI;AACT,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAJ,CAASC,OAAT,CAAiBC,IAA5B,CAAf;;AACA,UAAIL,MAAM,CAACM,iBAAP,KAA6B,IAAjC,EAAsC;AAClCb,QAAAA,OAAO,GAAGO,MAAM,CAACI,OAAP,CAAeX,OAAzB;AACAC,QAAAA,QAAQ,GAAG,IAAX;AACA,YAAML,MAAK,GAAGW,MAAM,CAACI,OAAP,CAAef,KAA7B;AACAkB,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCnB,MAAjC;AACAD,QAAAA,sBAAsB,CAACC,MAAD,CAAtB;AACH;;AACDE,MAAAA,OAAO,CAAC,CAACE,OAAD,EAAUC,QAAV,CAAD,CAAP;AACH,KAfD,EAgBCe,KAhBD,CAgBO,UAAAC,KAAK;AAAA,aAAIlB,MAAM,CAACkB,KAAK,CAACjB,OAAP,CAAV;AAAA,KAhBZ;AAiBH,GArBM,CAAP;AAsBH","sourcesContent":["import axios from 'axios';\r\nimport setAuthorizationHeader from './../utils/setAuthorizationToken';\r\n\r\n\r\n// const headers = {\r\n//     headers: {\r\n//         'Access-Control-Allow-Origin': '*'\r\n//     }\r\n// };\r\n\r\nexport default function(token) {\r\n    return new Promise((resolve, reject) => {\r\n        let message;\r\n        let redirect;\r\n        const api_uri = 'http://localhost:8081/api/v1/users/tokenUpdate';\r\n        axios.post(api_uri, {\r\n            token,\r\n            // headers,\r\n            json: true\r\n        })\r\n        .then(res => {\r\n            const respJS = JSON.parse(res.data.content.text);\r\n            if (respJS.hasBeenSuccessful === true){\r\n                message = respJS.content.message;\r\n                redirect = true;\r\n                const token = respJS.content.token;\r\n                localStorage.setItem('jwtToken', token);\r\n                setAuthorizationHeader(token);\r\n            }\r\n            resolve([message, redirect]);\r\n        })\r\n        .catch(error => reject(error.message));\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}