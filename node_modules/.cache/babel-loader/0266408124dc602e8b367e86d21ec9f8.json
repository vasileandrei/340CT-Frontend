{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\src\\\\components\\\\FileShare\\\\FileShare.js\";\nimport React, { Component } from 'react';\nimport { SyncLoader } from 'react-spinners';\nimport { connect } from 'react-redux';\nimport { logout } from './../../actions/authActions';\nimport { store } from './../../index';\nimport { setCurrentUser } from './../../actions/authActions';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { CSSTransition } from 'react-transition-group';\nimport { Confirm } from 'react-confirm-bootstrap';\nimport PropTypes from 'prop-types';\nimport customerEmail from './../../actions/emailReq';\nimport deleteFile from './../../actions/axiosFileDel';\nimport downloadReq from './../../actions/axiosFileReq';\nimport deleteReq from './../../utils/markAsDeleted';\nimport setAuthorizationToken from './../../utils/setAuthorizationToken';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './FileShare.css';\nvar domainName = 'localhost:3000';\nvar currentFile;\n\nvar FileShare =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileShare, _Component);\n\n  function FileShare(props) {\n    var _this;\n\n    _classCallCheck(this, FileShare);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileShare).call(this, props));\n\n    _this._showFlashMessage = function (event) {\n      _this.setState({\n        show: !_this.state.show,\n        showClass: !_this.state.show ? 'fadeOut' : 'fadeOut2'\n      });\n    };\n\n    _this.notify = function () {\n      if (_this.state.boxText) {\n        toast('Successfully copied to clipboard', {\n          className: 'toast'\n        });\n      } else {\n        toast('There is no text to add to clipboard', {\n          className: 'toast'\n        });\n      }\n    };\n\n    _this.restore = function (user, token) {\n      localStorage.setItem('jwtToken', token);\n      setAuthorizationToken(user);\n      store.dispatch(setCurrentUser(user));\n    };\n\n    _this.checkExpire = function (expires) {\n      var currentTime = Date.now();\n\n      if (currentTime > expires) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    _this.displayText = function (expires) {\n      var date = new Date(expires);\n      return date.toUTCString();\n    };\n\n    _this.handleDownload = function () {\n      _this.showFlashMessage();\n\n      _this.setState({\n        message: 'Initiate download',\n        loading: true\n      }); // this.download();\n      // console.log(currentFile._id);\n\n    };\n\n    _this.onConfirm = function () {\n      _this.handleDownload();\n    };\n\n    _this.render = function () {\n      var expireText = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"File expires on \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, _this.state.targetDate));\n      return React.createElement(CSSTransition, {\n        in: _this.state.appearLogin,\n        appear: true,\n        timeout: 300,\n        classNames: \"fade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        autoClose: 2500,\n        pauseOnHover: false,\n        hideProgressBar: true,\n        className: \"toast\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"homeTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Your file is ready\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), _this.state.targetDate ? expireText : '', React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"linkDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"textOnBox\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: _this.state.boxText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, _this.state.boxText)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(SyncLoader, {\n        sizeUnit: 'px',\n        size: 10,\n        color: 'rgba(113, 137, 255, 0.9)',\n        loading: _this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: _this.state.showClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, _this.state.message)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(CopyToClipboard, {\n        text: _this.state.boxText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"actionButton\",\n        onClick: _this.notify,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Copy\")), React.createElement(Confirm, {\n        test: _this.visible,\n        className: \"confirmBox\",\n        onConfirm: _this.onConfirm,\n        body: \"Downloading the file will delete the file from the website. Do you wish to continue?\",\n        confirmText: \"Download\",\n        title: \"Download File\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"actionButton\",\n        onClick: _this.handleDownload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Download\")))));\n    };\n\n    var textBoxInput;\n    var expireDate;\n    currentFile = _this.props.auth.user.userInfo.files.find(function (o) {\n      return o._id === props.match.params.id;\n    });\n\n    if (currentFile) {\n      var expired = _this.checkExpire(currentFile.expires);\n\n      if (expired) {\n        textBoxInput = 'File expired';\n      } else {\n        textBoxInput = \"\".concat(domainName).concat(_this.props.location.pathname);\n        expireDate = _this.displayText(currentFile.expires);\n      }\n    }\n\n    _this.state = {\n      boxText: textBoxInput,\n      copied: false,\n      appearLogin: true,\n      loading: false,\n      message: '',\n      targetDate: expireDate,\n      alertBox: false\n    };\n\n    _this.showFlashMessage = function (event) {\n      return _this._showFlashMessage(event);\n    };\n\n    return _this;\n  } // eslint-disable-next-line no-unused-vars\n\n\n  _createClass(FileShare, [{\n    key: \"download\",\n    value: function () {\n      var _download = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var userIndex, tokenIndex, expired, delBool, token, response, newUser, newToken, message;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userIndex = 0;\n                tokenIndex = 1;\n                expired = this.checkExpire(currentFile.expires);\n\n                if (!expired) {\n                  _context.next = 7;\n                  break;\n                }\n\n                this.setState({\n                  message: 'File expired. It can no longer be downloaded.',\n                  loading: false,\n                  boxText: 'File expired'\n                });\n                _context.next = 27;\n                break;\n\n              case 7:\n                _context.next = 9;\n                return deleteFile('soft_delete', currentFile._id);\n\n              case 9:\n                delBool = _context.sent;\n\n                if (!delBool) {\n                  _context.next = 27;\n                  break;\n                }\n\n                token = localStorage.getItem('jwtToken');\n                _context.next = 14;\n                return deleteReq(token);\n\n              case 14:\n                response = _context.sent;\n                newUser = response[userIndex];\n                newToken = response[tokenIndex]; // Clear current redux store\n\n                this.props.logout(); // Initiate download\n\n                _context.next = 20;\n                return downloadReq('download', currentFile.url);\n\n              case 20:\n                message = _context.sent;\n\n                if (!message) {\n                  message = 'Failed to download';\n                }\n\n                this.setState({\n                  loading: false,\n                  message: message\n                }); // Set Redux store back\n\n                this.restore(newUser, newToken);\n                window.location.replace('/');\n                _context.next = 27;\n                return customerEmail('customer', this.props.auth.user.userInfo.email, currentFile._id);\n\n              case 27:\n                this.showFlashMessage();\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function download() {\n        return _download.apply(this, arguments);\n      };\n    }()\n  }]);\n\n  return FileShare;\n}(Component);\n\nFileShare.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default connect(mapStateToProps, {\n  logout: logout\n})(FileShare);","map":{"version":3,"sources":["D:\\University\\Frontend-340CT\\frontend340ct\\src\\components\\FileShare\\FileShare.js"],"names":["React","Component","SyncLoader","connect","logout","store","setCurrentUser","ToastContainer","toast","CopyToClipboard","CSSTransition","Confirm","PropTypes","customerEmail","deleteFile","downloadReq","deleteReq","setAuthorizationToken","domainName","currentFile","FileShare","props","_showFlashMessage","event","setState","show","state","showClass","notify","boxText","className","restore","user","token","localStorage","setItem","dispatch","checkExpire","expires","currentTime","Date","now","displayText","date","toUTCString","handleDownload","showFlashMessage","message","loading","onConfirm","render","expireText","targetDate","appearLogin","visible","textBoxInput","expireDate","auth","userInfo","files","find","o","_id","match","params","id","expired","location","pathname","copied","alertBox","userIndex","tokenIndex","delBool","getItem","response","newUser","newToken","url","window","replace","email","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { SyncLoader } from 'react-spinners';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../../actions/authActions';\r\nimport { store } from './../../index';\r\nimport { setCurrentUser } from './../../actions/authActions';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Confirm } from 'react-confirm-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport customerEmail from './../../actions/emailReq';\r\nimport deleteFile from './../../actions/axiosFileDel';\r\nimport downloadReq from './../../actions/axiosFileReq';\r\nimport deleteReq from './../../utils/markAsDeleted';\r\nimport setAuthorizationToken from './../../utils/setAuthorizationToken';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './FileShare.css';\r\n\r\nconst domainName = 'localhost:3000';\r\nlet currentFile;\r\n\r\nclass FileShare extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let textBoxInput;\r\n        let expireDate;\r\n\r\n        currentFile = this.props.auth.user.userInfo.files.find(o => o._id === props.match.params.id);\r\n\r\n        if (currentFile){\r\n            const expired = this.checkExpire(currentFile.expires);\r\n            if (expired) {\r\n                textBoxInput = 'File expired';\r\n            } else {\r\n                textBoxInput = `${domainName}${this.props.location.pathname}`;\r\n                expireDate = this.displayText(currentFile.expires);\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            boxText: textBoxInput,\r\n            copied: false,\r\n            appearLogin: true,\r\n            loading: false,\r\n            message: '',\r\n            targetDate: expireDate,\r\n            alertBox: false\r\n        };\r\n\r\n\t\tthis.showFlashMessage = (event) => this._showFlashMessage(event);\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    _showFlashMessage = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tshow: !this.state.show,\r\n\t\t\tshowClass: (!this.state.show ? 'fadeOut': 'fadeOut2')\r\n\t\t});\r\n\t}\r\n\r\n    notify = () => {\r\n        if (this.state.boxText) {\r\n            toast('Successfully copied to clipboard', { className: 'toast' });\r\n        } else {\r\n            toast('There is no text to add to clipboard', { className: 'toast' });\r\n        }\r\n    }\r\n\r\n    restore = (user, token) => {\r\n        localStorage.setItem('jwtToken', token);\r\n        setAuthorizationToken(user);\r\n        store.dispatch(setCurrentUser(user));\r\n    }\r\n\r\n    checkExpire = (expires) => {\r\n        const currentTime = Date.now();\r\n        if (currentTime > expires) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    displayText = (expires) => {\r\n        const date = new Date(expires);\r\n        return date.toUTCString();\r\n    }\r\n\r\n    handleDownload = () => {\r\n        this.showFlashMessage();\r\n        this.setState({\r\n            message: 'Initiate download',\r\n            loading: true\r\n        });\r\n        // this.download();\r\n        // console.log(currentFile._id);\r\n    }\r\n\r\n\r\n    async download() {\r\n        const userIndex = 0;\r\n        const tokenIndex = 1;\r\n\r\n        const expired = this.checkExpire(currentFile.expires);\r\n        if (expired) {\r\n            this.setState({\r\n                message: 'File expired. It can no longer be downloaded.',\r\n                loading: false,\r\n                boxText: 'File expired'\r\n            });\r\n\r\n        } else {\r\n            // Soft delete file\r\n            const delBool = await deleteFile('soft_delete', currentFile._id);\r\n            if (delBool) {\r\n                const token = localStorage.getItem('jwtToken');\r\n\r\n                const response = await deleteReq(token);\r\n                const newUser = response[userIndex];\r\n                const newToken = response[tokenIndex];\r\n\r\n                // Clear current redux store\r\n                this.props.logout();\r\n                // Initiate download\r\n                let message = await downloadReq('download', currentFile.url);\r\n                if (!message) {\r\n                    message = 'Failed to download';\r\n                }\r\n                this.setState({\r\n                    loading: false,\r\n                    message\r\n                });\r\n                // Set Redux store back\r\n                this.restore(newUser, newToken);\r\n                window.location.replace('/');\r\n                await customerEmail('customer', this.props.auth.user.userInfo.email, currentFile._id);\r\n                // console.log('email');\r\n            }\r\n\r\n        }\r\n        this.showFlashMessage();\r\n    }\r\n\r\n    onConfirm = () => {\r\n        this.handleDownload();\r\n    }\r\n\r\n    render = () => {\r\n        const expireText = <p>File expires on <b>{this.state.targetDate}</b></p>;\r\n        return (\r\n            <CSSTransition\r\n            in={this.state.appearLogin}\r\n            appear={true}\r\n            timeout={300}\r\n            classNames=\"fade\"\r\n            >\r\n                <div className='body'>\r\n                <ToastContainer\r\n                    autoClose={2500}\r\n                    pauseOnHover={false}\r\n                    hideProgressBar={true}\r\n                    className='toast'\r\n                />\r\n                    <div className='content'>\r\n                        <h1 className='homeTitle'>Your file is ready</h1>\r\n                        <br /> <br />\r\n                        { this.state.targetDate? expireText : ''}\r\n                        <br />\r\n                        <p className='linkDisplay'>\r\n                            <a className='textOnBox' target=\"_blank\" rel=\"noopener noreferrer\"\r\n                            href={this.state.boxText}>\r\n                                {this.state.boxText}\r\n                            </a>\r\n                            </p>\r\n                        <br />\r\n                        <div className='display'>\r\n                            <SyncLoader\r\n                                sizeUnit={'px'}\r\n                                size={10}\r\n                                color={'rgba(113, 137, 255, 0.9)'}\r\n                                loading={this.state.loading}\r\n                            />\r\n                            <br />\r\n                            <div className={this.state.showClass}>\r\n                                {this.state.message}\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <CopyToClipboard text={this.state.boxText}>\r\n                            <button className='actionButton' onClick={this.notify}>Copy</button>\r\n                        </CopyToClipboard>\r\n                        <Confirm\r\n                            test={this.visible}\r\n                            className=\"confirmBox\"\r\n                            onConfirm={this.onConfirm}\r\n                            body=\"Downloading the file will delete the file from the website. Do you wish to continue?\"\r\n                            confirmText=\"Download\"\r\n                            title=\"Download File\">\r\n                            <button className='actionButton' onClick={this.handleDownload}>Download</button>\r\n                        </Confirm>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n}\r\n\r\nFileShare.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    match: PropTypes.object.isRequired,\r\n    location: PropTypes.object.isRequired\r\n\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(FileShare);\r\n"]},"metadata":{},"sourceType":"module"}