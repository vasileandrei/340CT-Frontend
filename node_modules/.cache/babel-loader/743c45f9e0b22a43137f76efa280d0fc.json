{"ast":null,"code":"import _defineProperty from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\src\\\\components\\\\Contact\\\\Contact.js\";\nimport React, { Component } from 'react';\nimport { Button, FormGroup, FormControl } from 'react-bootstrap';\nimport { CSSTransition } from 'react-transition-group';\nimport { SyncLoader } from 'react-spinners';\nimport './Contact.css';\nvar zero = 0;\n\nvar Contact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contact, _Component);\n\n  function Contact(props) {\n    var _this;\n\n    _classCallCheck(this, Contact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Contact).call(this, props));\n\n    _this._showFlashMessage = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        show: !_this.state.show,\n        showClass: !_this.state.show ? 'fadeOut' : 'fadeOut2'\n      });\n    };\n\n    _this.state = {\n      fullName: '',\n      email: '',\n      inputMessage: '',\n      appearContact: true,\n      loading: false,\n      message: ''\n    };\n\n    _this.showFlashMessage = function (event) {\n      return _this._showFlashMessage(event);\n    };\n\n    return _this;\n  } // eslint-disable-next-line no-unused-vars\n\n\n  _createClass(Contact, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      if (this.state.fullName.length > zero && this.state.email.length > zero && this.state.inputMessage.length > zero) {\n        return true;\n      }\n    } // handle changes in the three fields\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.id, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n\n      if (this.state.fullName.length > zero && this.state.email.length > zero && this.state.inputMessage.length > zero) {\n        this.setState({\n          loading: true\n        });\n        this.submit();\n      } else {\n        this.setState({\n          message: 'Please complete the entire'\n        });\n      }\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      this.setState({\n        message: 'Thank you for the feedback',\n        loading: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CSSTransition, {\n        in: this.state.appearContact,\n        appear: true,\n        timeout: 300,\n        classNames: \"fade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"contact-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"contactTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Thank you for the feedback\"), React.createElement(FormGroup, {\n        className: \"field\",\n        controlId: \"fullName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        autoFocus: true,\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Full name\",\n        value: this.state.fullName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"field\",\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: \"input\",\n        type: \"email\",\n        placeholder: \"Email address\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"text\",\n        controlId: \"inputMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: \"input textArea\",\n        componentClass: \"textarea\",\n        placeholder: \"Mesage here...\",\n        value: this.state.inputMessage,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(SyncLoader, {\n        sizeUnit: 'px',\n        size: 10,\n        color: 'rgba(113, 137, 255, 0.9)',\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.state.showClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        className: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        name: \"submit\",\n        disabled: !this.validateForm,\n        onClick: this.showFlashMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Contact;\n}(Component);\n\nexport default Contact;","map":{"version":3,"sources":["D:\\University\\Frontend-340CT\\frontend340ct\\src\\components\\Contact\\Contact.js"],"names":["React","Component","Button","FormGroup","FormControl","CSSTransition","SyncLoader","zero","Contact","props","_showFlashMessage","event","preventDefault","setState","show","state","showClass","fullName","email","inputMessage","appearContact","loading","message","showFlashMessage","length","target","id","value","submit","handleSubmit","handleChange","validateForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, FormGroup, FormControl } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { SyncLoader } from 'react-spinners';\r\nimport './Contact.css';\r\n\r\nconst zero = 0;\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fullName: '',\r\n            email: '',\r\n            inputMessage: '',\r\n            appearContact: true,\r\n            loading: false,\r\n            message: ''\r\n        };\r\n        this.showFlashMessage = (event) => this._showFlashMessage(event);\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    _showFlashMessage = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n          show: !this.state.show,\r\n          showClass: (!this.state.show ? 'fadeOut': 'fadeOut2')\r\n        });\r\n    }\r\n\r\n    validateForm() {\r\n        if (this.state.fullName.length > zero && this.state.email.length > zero &&\r\n        this.state.inputMessage.length > zero) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // handle changes in the three fields\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        if (this.state.fullName.length > zero && this.state.email.length > zero &&\r\n            this.state.inputMessage.length > zero) {\r\n            this.setState({\r\n                loading: true\r\n            });\r\n            this.submit();\r\n        } else {\r\n            this.setState({\r\n                message: 'Please complete the entire'\r\n            });\r\n        }\r\n    }\r\n\r\n    submit() {\r\n        this.setState({\r\n            message: 'Thank you for the feedback',\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CSSTransition\r\n                    in={this.state.appearContact}\r\n                    appear={true}\r\n                    timeout={300}\r\n                    classNames=\"fade\"\r\n                    >\r\n                <form className=\"contact-form\" onSubmit={this.handleSubmit}>\r\n                    <h1 className=\"contactTitle\">Thank you for the feedback</h1>\r\n                    <FormGroup className=\"field\" controlId=\"fullName\">\r\n                        <FormControl autoFocus className=\"input\" type=\"text\"\r\n                        placeholder=\"Full name\" value={this.state.fullName} onChange={this.handleChange} />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"field\" controlId=\"email\">\r\n                        <FormControl className=\"input\" type=\"email\"\r\n                        placeholder=\"Email address\" value={this.state.email} onChange={this.handleChange} />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"text\" controlId=\"inputMessage\">\r\n                        <FormControl className=\"input textArea\" componentClass=\"textarea\"\r\n                        placeholder=\"Mesage here...\" value={this.state.inputMessage} onChange={this.handleChange} />\r\n                    </FormGroup>\r\n                    <br />\r\n                    <SyncLoader\r\n                        sizeUnit={'px'}\r\n                        size={10}\r\n                        color={'rgba(113, 137, 255, 0.9)'}\r\n                        loading={this.state.loading}\r\n                    />\r\n                    <br />\r\n                    <div className={this.state.showClass}>\r\n                        {this.state.message}\r\n                    </div>\r\n                    <br />\r\n                    <FormGroup className=\"submit\">\r\n                        <Button type=\"submit\" name=\"submit\" disabled={!this.validateForm}\r\n                        onClick={this.showFlashMessage}>Submit</Button>\r\n                    </FormGroup>\r\n                    <br />\r\n                </form>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n"]},"metadata":{},"sourceType":"module"}