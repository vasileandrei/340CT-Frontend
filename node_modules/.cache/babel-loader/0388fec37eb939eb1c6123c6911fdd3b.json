{"ast":null,"code":"import axios from 'axios';\nimport { UPLOAD_REQ, DOWNLOAD_REQ } from './types';\nvar headers = {\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n    'Content-Type': 'multipart/form-data'\n  }\n};\n\nfunction getFileName(currentName) {\n  var nameList = currentName.split('.');\n}\n\nexport default function (action, token, file, username, email) {\n  if (action === UPLOAD_REQ) {\n    headers.headers['Authorization'] = token;\n    return new Promise(function (resolve, reject) {\n      var message;\n      var redirect = false;\n      var currentFile;\n      var data = new FormData();\n      data.append('image', file);\n      var api_uri = \"http://localhost:8085/api/v1/files/upload/\".concat(username, \"/\").concat(email);\n      axios({\n        method: 'post',\n        url: api_uri,\n        data: data,\n        config: {\n          headers: headers\n        },\n        json: true\n      }).then(function (res) {\n        var respJS = JSON.parse(res.data.content.text);\n\n        if (respJS.hasBeenSuccessful === true) {\n          redirect = true;\n          message = respJS.content.message;\n          currentFile = respJS.content.fileInfo;\n        }\n\n        resolve([message, redirect, currentFile]);\n      }).catch(function (error) {\n        return reject(error.message);\n      });\n    });\n  } else if (action === DOWNLOAD_REQ) {\n    return new Promise(function (resolve, reject) {\n      var message;\n      axios.get(file, {\n        responseType: 'blob' // important\n\n      }).then(function (response) {\n        var url = window.URL.createObjectURL(new Blob([response.data]));\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'image.jpg');\n        document.body.appendChild(link);\n        link.click();\n        message = 'Sucessfully downloaded';\n        resolve(message);\n      }).catch(function (error) {\n        return reject(error.message);\n      });\n    });\n  }\n}","map":{"version":3,"sources":["D:\\University\\Frontend-340CT\\frontend340ct\\src\\actions\\axiosFileReq.js"],"names":["axios","UPLOAD_REQ","DOWNLOAD_REQ","headers","getFileName","currentName","nameList","split","action","token","file","username","email","Promise","resolve","reject","message","redirect","currentFile","data","FormData","append","api_uri","method","url","config","json","then","res","respJS","JSON","parse","content","text","hasBeenSuccessful","fileInfo","catch","error","get","responseType","response","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { UPLOAD_REQ, DOWNLOAD_REQ } from './types';\r\n\r\nconst headers = {\r\n    headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'multipart/form-data'\r\n    }\r\n};\r\n\r\nfunction getFileName(currentName) {\r\n    const nameList = currentName.split('.');\r\n}\r\n\r\n\r\nexport default function(action, token, file, username, email) {\r\n    if (action === UPLOAD_REQ) {\r\n        headers.headers['Authorization'] = token;\r\n        return new Promise((resolve, reject) => {\r\n            let message;\r\n            let redirect = false;\r\n            let currentFile;\r\n            const data = new FormData();\r\n            data.append('image', file);\r\n            const api_uri = `http://localhost:8085/api/v1/files/upload/${username}/${email}`;\r\n            axios({\r\n                method: 'post',\r\n                url: api_uri,\r\n                data: data,\r\n                config: { headers },\r\n                json: true\r\n            })\r\n            .then(res => {\r\n                const respJS = JSON.parse(res.data.content.text);\r\n                if (respJS.hasBeenSuccessful === true){\r\n                    redirect = true;\r\n                    message = respJS.content.message;\r\n                    currentFile = respJS.content.fileInfo;\r\n                }\r\n                resolve([message, redirect, currentFile]);\r\n            })\r\n            .catch(error => reject(error.message));\r\n        });\r\n    } else if (action === DOWNLOAD_REQ) {\r\n        return new Promise((resolve, reject) => {\r\n            let message;\r\n            axios.get(file, {\r\n                    responseType: 'blob' // important\r\n                })\r\n                .then((response) => {\r\n                    const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                    const link = document.createElement('a');\r\n                    link.href = url;\r\n                    link.setAttribute('download', 'image.jpg');\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    message = 'Sucessfully downloaded';\r\n                    resolve(message);\r\n                })\r\n                .catch(error => reject(error.message));\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}