{"ast":null,"code":"import _defineProperty from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\University\\\\Frontend-340CT\\\\frontend340ct\\\\src\\\\components\\\\DropZone\\\\DropZone.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { SyncLoader } from 'react-spinners';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { logout } from './../../actions/authActions';\nimport { setCurrentUser } from './../../actions/authActions';\nimport { store } from './../../index';\nimport setAuthorizationToken from './../../utils/setAuthorizationToken';\nimport generateToken from './../../utils/generateToken';\nimport DropZoneReact from 'react-dropzone';\nimport uploadReq from './../../actions/axiosFileReq';\nimport fileIcon from './images/file.png';\nimport './DropZone.css';\n\nvar DropZone =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DropZone, _Component);\n\n  function DropZone(props) {\n    var _this;\n\n    _classCallCheck(this, DropZone);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropZone).call(this, props));\n    _this.state = {\n      message: '',\n      buttonEnable: false,\n      show: true,\n      showClass: '',\n      currentFile: '',\n      loading: false,\n      appearLogin: true\n    };\n\n    _this.showFlashMessage = function (event) {\n      return _this._showFlashMessage(event);\n    };\n\n    return _this;\n  } // eslint-disable-next-line no-unused-vars\n\n\n  _createClass(DropZone, [{\n    key: \"_showFlashMessage\",\n    value: function _showFlashMessage(event) {\n      event.preventDefault();\n      this.setState({\n        show: !this.state.show,\n        showClass: !this.state.show ? 'fadeOut' : 'fadeOut2'\n      });\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return true;\n    } // handle changes in the two fields\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.id, event.target.value));\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(file) {\n      this.setState({\n        buttonEnable: true,\n        currentFile: file\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      this.showFlashMessage(event);\n\n      if (!this.state.buttonEnable) {\n        this.setState({\n          message: 'Drop file before submit'\n        });\n      } else {\n        this.setState({\n          loading: true\n        });\n        this.upload();\n      }\n    }\n  }, {\n    key: \"appendToRedux\",\n    value: function appendToRedux(fileInfo) {\n      // Remember user\n      var index = this.props.auth.user.userInfo.files.length;\n      this.props.auth.user.userInfo.files[index] = fileInfo;\n      var userInfo = this.props.auth.user; // Logout\n\n      this.props.logout(); // Generate and restore Redux store, local storage and session storage\n\n      var newToken = generateToken(userInfo);\n      localStorage.setItem('jwtToken', newToken);\n      setAuthorizationToken(userInfo);\n      store.dispatch(setCurrentUser(userInfo));\n    }\n  }, {\n    key: \"upload\",\n    value: function upload() {\n      var messageIndex = 0;\n      var redirectIndex = 1;\n      var fileIndex = 2;\n      var username = this.props.auth.user.userInfo.username;\n      var file = this.state.currentFile[messageIndex];\n      var response = uploadReq('upload', file, username);\n\n      if (response) {\n        var currentFile = response[fileIndex];\n        this.setState({\n          message: response[messageIndex]\n        });\n        this.appendToRedux(currentFile);\n\n        if (response[redirectIndex]) {\n          window.location.replace(\"/getFile/\".concat(currentFile._id));\n        }\n      } else {\n        this.setState({\n          message: 'Internal server problems'\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CSSTransition, {\n        in: this.state.appearLogin,\n        appear: true,\n        timeout: 300,\n        classNames: \"fade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"dropZoneTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Drag, Drop and Enjoy\"), React.createElement(DropZoneReact, {\n        className: \"drop-zone\",\n        name: \"image\",\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"drop zone file icon\",\n        src: fileIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Drop file\"))), React.createElement(\"div\", {\n        className: \"display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(SyncLoader, {\n        sizeUnit: 'px',\n        size: 10,\n        color: 'rgba(113, 137, 255, 0.9)',\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.state.showClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return DropZone;\n}(Component);\n\nDropZone.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default connect(mapStateToProps, {\n  logout: logout\n})(DropZone);","map":{"version":3,"sources":["D:\\University\\Frontend-340CT\\frontend340ct\\src\\components\\DropZone\\DropZone.js"],"names":["PropTypes","React","Component","SyncLoader","CSSTransition","connect","logout","setCurrentUser","store","setAuthorizationToken","generateToken","DropZoneReact","uploadReq","fileIcon","DropZone","props","state","message","buttonEnable","show","showClass","currentFile","loading","appearLogin","showFlashMessage","event","_showFlashMessage","preventDefault","setState","target","id","value","file","upload","fileInfo","index","auth","user","userInfo","files","length","newToken","localStorage","setItem","dispatch","messageIndex","redirectIndex","fileIndex","username","response","appendToRedux","window","location","replace","_id","onDrop","handleSubmit","propTypes","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { SyncLoader } from 'react-spinners';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../../actions/authActions';\r\nimport { setCurrentUser } from './../../actions/authActions';\r\nimport { store } from './../../index';\r\nimport setAuthorizationToken from './../../utils/setAuthorizationToken';\r\nimport generateToken from './../../utils/generateToken';\r\nimport DropZoneReact from 'react-dropzone';\r\nimport uploadReq from './../../actions/axiosFileReq';\r\nimport fileIcon from './images/file.png';\r\nimport './DropZone.css';\r\n\r\nclass DropZone extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmessage: '',\r\n\t\t\tbuttonEnable: false,\r\n\t\t\tshow: true,\r\n\t\t\tshowClass: '',\r\n\t\t\tcurrentFile: '',\r\n            loading: false,\r\n            appearLogin: true\r\n\t\t};\r\n\r\n\t\tthis.showFlashMessage = (event) => this._showFlashMessage(event);\r\n\t}\r\n\r\n\t// eslint-disable-next-line no-unused-vars\r\n\t_showFlashMessage(event) {\r\n        event.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\tshow: !this.state.show,\r\n\t\t\tshowClass: (!this.state.show ? 'fadeOut': 'fadeOut2')\r\n\t\t});\r\n\t}\r\n\r\n\tvalidateForm() {\r\n\t\treturn true;\r\n\t}\r\n\r\n    // handle changes in the two fields\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    onDrop(file) {\r\n        this.setState({\r\n            buttonEnable: true,\r\n            currentFile: file\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        this.showFlashMessage(event);\r\n        if (!this.state.buttonEnable) {\r\n            this.setState({\r\n                message: 'Drop file before submit'\r\n            });\r\n        } else {\r\n            this.setState({\r\n                loading: true\r\n            });\r\n            this.upload();\r\n        }\r\n    }\r\n\r\n    appendToRedux(fileInfo) {\r\n\r\n        // Remember user\r\n        const index = this.props.auth.user.userInfo.files.length;\r\n        this.props.auth.user.userInfo.files[index] = fileInfo;\r\n        const userInfo = this.props.auth.user;\r\n\r\n        // Logout\r\n        this.props.logout();\r\n\r\n        // Generate and restore Redux store, local storage and session storage\r\n        const newToken = generateToken(userInfo);\r\n        localStorage.setItem('jwtToken', newToken);\r\n        setAuthorizationToken(userInfo);\r\n        store.dispatch(setCurrentUser(userInfo));\r\n    }\r\n\r\n    upload() {\r\n        const messageIndex = 0;\r\n        const redirectIndex = 1;\r\n        const fileIndex = 2;\r\n\r\n        const username = this.props.auth.user.userInfo.username;\r\n        const file = this.state.currentFile[messageIndex];\r\n        const response = uploadReq('upload', file, username);\r\n        if (response) {\r\n            const currentFile = response[fileIndex];\r\n            this.setState({\r\n                message: response[messageIndex]\r\n            });\r\n            this.appendToRedux(currentFile);\r\n            if (response[redirectIndex]){\r\n                window.location.replace(`/getFile/${currentFile._id}`);\r\n            }\r\n        } else {\r\n            this.setState({\r\n                message: 'Internal server problems'\r\n            });\r\n        }\r\n        this.setState({\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CSSTransition\r\n                    in={this.state.appearLogin}\r\n                    appear={true}\r\n                    timeout={300}\r\n                    classNames=\"fade\"\r\n                    >\r\n                <div className=\"body\">\r\n                    <h1 className=\"dropZoneTitle\">Drag, Drop and Enjoy</h1>\r\n                    <DropZoneReact\r\n                        className=\"drop-zone\"\r\n                        name=\"image\"\r\n                        onDrop={this.onDrop}\r\n                    >\r\n                        <div>\r\n                            <img alt=\"drop zone file icon\" src={fileIcon}></img>\r\n                            <br />\r\n                            <h3>Drop file</h3>\r\n                        </div>\r\n                    </DropZoneReact>\r\n                    <div className=\"display\">\r\n                        <SyncLoader\r\n                            sizeUnit={'px'}\r\n                            size={10}\r\n                            color={'rgba(113, 137, 255, 0.9)'}\r\n                            loading={this.state.loading}\r\n                        />\r\n                        <br />\r\n                        <div className={this.state.showClass}>\r\n                            {this.state.message}\r\n                        </div>\r\n                        <button className=\"button\" onClick={this.handleSubmit}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n}\r\n\r\nDropZone.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(DropZone);\r\n"]},"metadata":{},"sourceType":"module"}